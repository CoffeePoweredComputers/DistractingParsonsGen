ListCreate: 
  [
    '{lst_name} = {{{elems}}}', 
    '{lst_name} = ({elems})',
  ]
Append: 
  [
    '{lst_name} = {lst_name}.append({args})',
    '{lst_name} = {lst_name}.append[{args}]',
    '{lst_name}.append[{args}]',
    '{lst_name}.append([{args}])',
    '{lst_name}.add({args})'
  ]
Extend:
  [
    '{lst_name} = {lst_name}.extend({args})',
    '{lst_name} = {lst_name}.extend[{args}]',
    '{lst_name}.extend[{args}]',
    '{lst_name}.extend([{args}])',
    '{lst_name}.add({args})'
  ]
CountExpr:
  [
    '{lst_name}.count({elem})',
    '{lst_name}.count[{elem}]',
    'len({lst_name}.count({elem}))',
    '{lst_name}.len({elem})',
    '{lst_name}({elem})'
  ]
CountAssign:
  [
    '{count_elem} = {lst_name}.count({elem})',
    '{lst_name}.count({elem})',
    '{count_elem} = {lst_name}.count[{elem}]',
    '{count_elem} = len({lst_name}.count({elem}))',
    '{count_elem} = {lst_name}.len({elem})',
    '{count_elem} = {lst_name}({elem})'
  ]
Index:
  [
    '{lst_name} = {lst_name}.extend({args})',
    '{lst_name} = {lst_name}.extend[{args}]',
    '{lst_name}.extend[{args}]',
    '{lst_name}.extend([{args}])',
    '{lst_name}.add({args})'
  ]

Pop:
  Expr:
    [
      '{list_name}.pop[{param}]',
      'pop({list_name}, {param})',
      'pop.list_name({param})',
      '{list_name}.remove[{param}]',
      '{list_name}.remove({param})'
    ]
  Assign:
    # TODO: finish adding a few more
    [
      '{list_name} = {list_name}.pop[{args}]',
      '{list_name} = pop({list_name}, {args})',
      '{list_name} = pop.list_name({args})',
      '{list_name} = {list_name}.remove[{args}]',
      '{list_name} = {list_name}.remove({args})'
    ]

Remove:
  # TODO: finish adding a few more
  [
    '{list_name}.remove[{args}]',
    'remove({list_name}, {args})',
    'remove.{list_name}({args})',
    '{list_name}.remove[{args}]',
    '{list_name}.pop({args})'
  ]

Insert:
  [
    "{list_name}[{pos}] = {val}",
    "list_name = {list_name}.insert({pos}, {val})",
    "list_name = {list_name}.insert[{pos}, {val}]",
    "{list_name}.insert({val}, {pos})",
    "{list_name}[{pos}].append({val})",
    "{list_name}[{pos}].insert({val})"
  ]
Reverse:
  [
  ]
Sort:
  [
  ]
Sorted:
  [
  ]
SortReverse:
  [
  ]

DictCreate:
  Empty:
    [
      "{var_name} = []",
      "{var_name} = ()"
    ]
  NonEmpty:
    [
      [":", "{var_name} = dict{{{args}}}"],
      ["=", "{var_name} = {{{args}}}"],
      ["=", "{var_name} = [{args}]"],
      [":", "{var_name} = {{{args}}}"],
      [":", "{var_name} = [{args}]"],
      [",", "{var_name} = {{{args}}}"],
      [",", "{var_name} = [{args}]"]
    ]

Delete:
  # var - name of the dictionary
  # key - the key:value pair we want to remove
  [
    "{var_name}.del[{key}]",
    "{var_name}.del({key})",
    "del {var_name}({key})",
    "{var_name}.pop[{key}]", #type
    "{var_name}.remove[{key}]", #attr
    "{var_name}.remove({key})" #attr
  ]

AddChangePair:
  [
    "{var_name} = {{{key}, {value}}}", #assertion
    "{var_name} = {{{key}: {value}}}", #assertion
    "{var_name}[{value}] = {key}", #assertion
    "{var_name}.append({key}, {value})", #attribute error
    "{var_name}.update = {{{key}, {value}}}", #attribute error
    "{var_name}.update[{key}, {value}]", #TypeError
    "{var_name}.update({key})", #ValueError
  ]

Update:
  [
    [ ":", "{var_name} = {args}.update({var_name})"],
    [ ":", "{var_name}.add({args})"],
    [ ":", "{var_name} += {args}"],
    [ ":", "{var_name} + {args}"],
    [ ":", "{var_name}[{args}]"],
    [ ":", "{var_name}.update([{args}])"],
    [ ":", "{var_name}.union({args})"],
    [ ":", "{var_name} = {var_name}.update({args})"],
    [ ":", "{var_name} = {var_name}.update({args})"],
    [ ":", "{var_name} = {var_name}.update({{{args}}})"],
    [ ":", "{var_name}.update({args})"]
  ]
